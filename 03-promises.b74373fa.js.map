{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,YAEpBA,MAbSQ,SAASC,cAAc,SAE/BC,iBAAiB,UAezB,SAAkBC,GAChBA,EAAMC,iBAQN,IAPA,IAIIC,EAAAF,EAAMG,OAAOC,SAHLC,EAGRH,EAHFG,OAAUC,MACDC,EAEPL,EAFFb,MAASiB,MACDE,EACNN,EADFM,KAAQF,MAGNG,EAAYC,OAAOH,GACdI,EAAI,EAAGA,EAAID,OAAOL,GAASM,IAClCC,QAAQC,IAAIH,OAAOL,GAASI,EAAWC,OAAOF,IAC9CrB,EAAcwB,EAAI,EAAGF,GAClBK,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjBJ,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,UAE9D8B,OAAM,SAAAJ,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClBJ,EAAA+B,OAAOI,QAAQ,sBAAqCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,UAE9DoB,GAAaC,OAAOF,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const {\n    amount: { value: amount },\n    delay: { value: delay },\n    step: { value: step },\n  } = event.target.elements;\n\n  let tempDelay = Number(delay);\n  for (let i = 0; i < Number(amount); i++) {\n    console.log(Number(amount), tempDelay, Number(step));\n    createPromise(i + 1, tempDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    tempDelay += Number(step);\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","_elements","target","elements","amount","value","delay1","step","tempDelay","Number","i","console","log","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.b74373fa.js.map"}